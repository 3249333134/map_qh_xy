{"version":3,"file":"index.js","sources":["pages/index/index.vue","pages/index/index.vue?type=page"],"sourcesContent":["<template>\r\n  <view class=\"container\">\r\n    <!-- 地图区域 -->    \r\n    <map class=\"map\" \r\n      :style=\"{ height: mapHeight + 'px' }\" \r\n      :latitude=\"mapConfig.latitude\" \r\n      :longitude=\"mapConfig.longitude\" \r\n      :markers=\"mapConfig.markers\">\r\n    </map>\r\n    \r\n    <!-- 可滑动区域 -->\r\n    <view class=\"content-area\" :style=\"{ height: contentHeight + 'px' }\">\r\n      <!-- 拖动条和搜索框 -->\r\n      <view class=\"fixed-content\"\r\n            @touchstart.stop=\"handleDragStart\"\r\n            @touchmove.stop=\"handleDrag\"\r\n            @touchend.stop=\"handleDragEnd\">\r\n        <view class=\"drag-handle\">\r\n          <view class=\"drag-bar\"></view>\r\n        </view>\r\n        \r\n        <!-- 搜索框 -->\r\n        <view class=\"search-box\">\r\n          <view class=\"search-input\">\r\n            <text class=\"iconfont icon-search\"></text>\r\n            <input type=\"text\" placeholder=\"搜索目的地、景点、攻略\" @input=\"onSearchInput\" />\r\n          </view>\r\n        </view>\r\n        \r\n        <!-- 分类标签 -->\r\n        <scroll-view v-if=\"showCategoryTabs\" class=\"category-tabs\" scroll-x>\r\n          <text \r\n            v-for=\"category in categories\" \r\n            :key=\"category.id\"\r\n            :class=\"['tab', { active: category.id === activeCategory }]\"\r\n            @tap=\"handleCategoryChange(category.id)\">\r\n            {{ category.name }}\r\n          </text>\r\n        </scroll-view>\r\n      </view>\r\n      \r\n      <!-- 瀑布流卡片列表 -->\r\n      <scroll-view \r\n        v-if=\"showWaterfall\"\r\n        class=\"waterfall-container\" \r\n        :style=\"{ height: waterfallHeight + 'px' }\"\r\n        scroll-y\r\n        @scroll=\"handleWaterfallScroll\"\r\n        @scrolltolower=\"loadMoreItems\">\r\n        <view class=\"waterfall\">\r\n          <view class=\"waterfall-column\">\r\n            <view \r\n              v-for=\"(height, index) in leftColumnHeights\" \r\n              :key=\"'left' + index\"\r\n              class=\"card\"\r\n              :style=\"{ '--card-height': height + 'rpx' }\">\r\n              <!-- 卡片内容 -->\r\n              <view class=\"card-media\"></view>\r\n              <view class=\"card-content\">\r\n                <view class=\"card-title\"></view>\r\n                <view class=\"card-author\"></view>\r\n                <view class=\"card-footer\">\r\n                  <view class=\"card-stats\"></view>\r\n                  <view class=\"card-location\"></view>\r\n                </view>\r\n              </view>\r\n            </view>\r\n          </view>\r\n          <view class=\"waterfall-column\">\r\n            <view \r\n              v-for=\"(height, index) in rightColumnHeights\" \r\n              :key=\"'right' + index\"\r\n              class=\"card\"\r\n              :style=\"{ '--card-height': height + 'rpx' }\">\r\n              <!-- 卡片内容 -->\r\n              <view class=\"card-media\"></view>\r\n              <view class=\"card-content\">\r\n                <view class=\"card-title\"></view>\r\n                <view class=\"card-author\"></view>\r\n                <view class=\"card-footer\">\r\n                  <view class=\"card-stats\"></view>\r\n                  <view class=\"card-location\"></view>\r\n                </view>\r\n              </view>\r\n            </view>\r\n          </view>\r\n        </view>\r\n        <view v-if=\"isLoading\" class=\"loading\">加载中...</view>\r\n      </scroll-view>\r\n    </view>\r\n  </view>\r\n</template>\r\n\r\n<script>\r\n// 导入工具函数和常量\r\nimport { LAYOUT_CONFIG } from './constants/layoutConfig.js'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      // 地图配置\r\n      mapConfig: {\r\n        latitude: 30.572815,\r\n        longitude: 104.066801,\r\n        markers: []\r\n      },\r\n      \r\n      // 分类数据\r\n      categories: [\r\n        { id: 'all', name: '全部', active: true },\r\n        { id: 'hot', name: '热门资源', active: false },\r\n        { id: 'exhibition', name: '展会活动', active: false },\r\n        { id: 'personal', name: '个人活动', active: false }\r\n      ],\r\n      activeCategory: 'all',\r\n      \r\n      // 布局相关\r\n      screenHeight: 0,\r\n      contentHeight: 0,\r\n      searchBoxHeight: 0,\r\n      \r\n      // 拖拽相关\r\n      isDragging: false,\r\n      dragStartY: 0,\r\n      dragStartHeight: 0,\r\n      \r\n      // 滚动相关\r\n      lastScrollTop: 0,\r\n      isScrollLocked: false,\r\n      \r\n      // 瀑布流数据\r\n      leftColumnHeights: [],\r\n      rightColumnHeights: [],\r\n      isLoading: false\r\n    }\r\n  },\r\n  \r\n  computed: {\r\n    // 计算地图高度\r\n    mapHeight() {\r\n      return this.screenHeight - this.contentHeight\r\n    },\r\n    \r\n    // 计算瀑布流容器高度\r\n    waterfallHeight() {\r\n      return this.contentHeight - this.searchBoxHeight - (this.showCategoryTabs ? 80 : 0)\r\n    },\r\n    \r\n    // 是否显示分类标签\r\n    showCategoryTabs() {\r\n      return this.contentHeight > this.minContentHeight\r\n    },\r\n    \r\n    // 是否显示瀑布流\r\n    showWaterfall() {\r\n      return this.contentHeight > this.minContentHeight\r\n    },\r\n    \r\n    // 最小内容高度（只显示搜索框）\r\n    minContentHeight() {\r\n      return this.searchBoxHeight + LAYOUT_CONFIG.MARGIN\r\n    },\r\n    \r\n    // 最大内容高度\r\n    maxContentHeight() {\r\n      return this.screenHeight * LAYOUT_CONFIG.MAX_CONTENT_RATIO\r\n    }\r\n  },\r\n  \r\n  onReady() {\r\n    this.initLayout()\r\n    this.generateRandomHeights()\r\n  },\r\n  \r\n  methods: {\r\n    // 初始化布局\r\n    initLayout() {\r\n      const systemInfo = uni.getSystemInfoSync()\r\n      this.screenHeight = systemInfo.windowHeight\r\n      \r\n      // 设置初始内容高度\r\n      this.contentHeight = this.screenHeight * LAYOUT_CONFIG.INITIAL_CONTENT_RATIO\r\n      \r\n      // 设置搜索框高度（固定值）\r\n      this.searchBoxHeight = 80 // 包含拖动条和搜索框的高度\r\n    },\r\n    \r\n    // 生成随机高度数据\r\n    generateRandomHeights() {\r\n      this.leftColumnHeights = this.generateRandomHeightsArray(10)\r\n      this.rightColumnHeights = this.generateRandomHeightsArray(10)\r\n    },\r\n    \r\n    // 生成随机高度数组\r\n    generateRandomHeightsArray(count) {\r\n      const heights = []\r\n      for (let i = 0; i < count; i++) {\r\n        // 生成150到300之间的随机高度\r\n        const min = 150\r\n        const max = 300\r\n        const height = Math.floor(Math.random() * (max - min + 1)) + min\r\n        heights.push(height)\r\n      }\r\n      return heights\r\n    },\r\n    \r\n    // 处理拖拽开始\r\n    handleDragStart(e) {\r\n      this.isDragging = true\r\n      this.dragStartY = e.touches[0].clientY\r\n      this.dragStartHeight = this.contentHeight\r\n    },\r\n    \r\n    // 处理拖拽中\r\n    handleDrag(e) {\r\n      if (!this.isDragging) return\r\n      \r\n      const currentY = e.touches[0].clientY\r\n      const deltaY = this.dragStartY - currentY\r\n      \r\n      // 计算新的内容区域高度\r\n      let newHeight = this.dragStartHeight + deltaY\r\n      \r\n      // 限制高度范围\r\n      newHeight = Math.max(\r\n        this.minContentHeight, \r\n        Math.min(this.maxContentHeight, newHeight)\r\n      )\r\n      \r\n      this.contentHeight = newHeight\r\n    },\r\n    \r\n    // 处理拖拽结束\r\n    handleDragEnd() {\r\n      this.isDragging = false\r\n      \r\n      // 添加边界吸附效果，三个状态：只显示搜索框、中间状态、最大高度\r\n      const range = this.maxContentHeight - this.minContentHeight\r\n      const snapThresholds = {\r\n        min: this.minContentHeight + range * LAYOUT_CONFIG.SNAP_THRESHOLD_LOW,\r\n        max: this.minContentHeight + range * LAYOUT_CONFIG.SNAP_THRESHOLD_HIGH\r\n      }\r\n      \r\n      let newHeight\r\n      if (this.contentHeight < snapThresholds.min) {\r\n        // 靠近最小高度，吸附到只显示搜索框的状态\r\n        newHeight = this.minContentHeight\r\n      } else if (this.contentHeight < snapThresholds.max) {\r\n        // 中间状态，吸附到屏幕的1/3\r\n        newHeight = this.screenHeight * LAYOUT_CONFIG.INITIAL_CONTENT_RATIO\r\n      } else {\r\n        // 靠近最大高度，吸附到最大高度\r\n        newHeight = this.maxContentHeight\r\n      }\r\n      \r\n      // 设置高度\r\n      this.contentHeight = newHeight\r\n    },\r\n    \r\n    // 处理瀑布流滚动\r\n    handleWaterfallScroll(e) {\r\n      if (this.isDragging || this.isScrollLocked) return\r\n      \r\n      const currentScrollTop = e.detail.scrollTop\r\n      const deltaY = currentScrollTop - this.lastScrollTop\r\n      \r\n      // 下拉（deltaY > 0）时改变布局\r\n      if (deltaY > 0 && this.contentHeight < this.maxContentHeight) {\r\n        this.handleWaterfallScrollDown(deltaY, currentScrollTop)\r\n      }\r\n      \r\n      this.lastScrollTop = currentScrollTop\r\n    },\r\n    \r\n    // 处理瀑布流向下滚动\r\n    handleWaterfallScrollDown(deltaY, currentScrollTop) {\r\n      // 瀑布流滚动距离与内容区域高度变化比例\r\n      const heightChange = Math.abs(deltaY) / LAYOUT_CONFIG.SCROLL_HEIGHT_RATIO\r\n      \r\n      // 计算新的内容区域高度\r\n      let newHeight = this.contentHeight + heightChange\r\n      newHeight = Math.min(this.maxContentHeight, newHeight)\r\n      \r\n      if (newHeight !== this.contentHeight) {\r\n        // 设置新的内容区域高度\r\n        this.contentHeight = newHeight\r\n        \r\n        // 重置滚动位置，防止瀑布流继续滚动\r\n        this.resetScrollPosition(currentScrollTop, deltaY)\r\n        \r\n        // 暂时锁定滚动，防止连续触发\r\n        this.lockScrollTemporarily()\r\n        \r\n        // 确保内容区域高度是屏幕高度的整数倍数\r\n        if (this.contentHeight > this.screenHeight * 0.5) {\r\n          this.contentHeight = Math.min(\r\n            this.maxContentHeight, \r\n            Math.ceil(this.contentHeight / (this.screenHeight * 0.25)) * (this.screenHeight * 0.25)\r\n          )\r\n        }\r\n      }\r\n    },\r\n    \r\n    // 重置滚动位置\r\n    resetScrollPosition(currentScrollTop, deltaY) {\r\n      // 减少滚动量，保持相对位置\r\n      const newScrollTop = Math.max(0, currentScrollTop + deltaY / LAYOUT_CONFIG.SCROLL_HEIGHT_RATIO)\r\n      \r\n      setTimeout(() => {\r\n        uni.pageScrollTo({\r\n          scrollTop: newScrollTop,\r\n          duration: 0\r\n        })\r\n      }, 0)\r\n    },\r\n    \r\n    // 暂时锁定滚动\r\n    lockScrollTemporarily() {\r\n      this.isScrollLocked = true\r\n      setTimeout(() => {\r\n        this.isScrollLocked = false\r\n      }, LAYOUT_CONFIG.SCROLL_LOCK_DURATION)\r\n    },\r\n    \r\n    // 处理分类切换\r\n    handleCategoryChange(categoryId) {\r\n      this.activeCategory = categoryId\r\n      // 这里可以添加分类切换后的逻辑，如加载对应分类的数据等\r\n    },\r\n    \r\n    // 搜索输入处理\r\n    onSearchInput(e) {\r\n      const searchText = e.detail.value\r\n      // 处理搜索逻辑\r\n    },\r\n    \r\n    // 加载更多内容\r\n    loadMoreItems() {\r\n      if (this.isLoading) return\r\n      \r\n      this.isLoading = true\r\n      \r\n      // 模拟异步加载\r\n      setTimeout(() => {\r\n        // 为两列各添加5个新卡片\r\n        const newLeftItems = this.generateRandomHeightsArray(5)\r\n        const newRightItems = this.generateRandomHeightsArray(5)\r\n        \r\n        this.leftColumnHeights = [...this.leftColumnHeights, ...newLeftItems]\r\n        this.rightColumnHeights = [...this.rightColumnHeights, ...newRightItems]\r\n        \r\n        this.isLoading = false\r\n      }, 500)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n/* 全局样式 */\r\n.container {\r\n  position: relative;\r\n  height: 100vh;\r\n  width: 100%;\r\n  overflow: hidden;\r\n  background-color: #f0f0f0;\r\n}\r\n\r\n/* 地图样式 */\r\n.map {\r\n  width: 100%;\r\n  transition: height 0.3s ease;\r\n}\r\n\r\n/* 内容区域样式 */\r\n.content-area {\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  background-color: #f0f0f0;\r\n  border-radius: 20px 20px 0 0;\r\n  transition: height 0.3s ease;\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n  min-height: 0;\r\n  box-shadow: 0 -3px 10px rgba(0,0,0,0.1);\r\n}\r\n\r\n/* 固定内容区域 */\r\n.fixed-content {\r\n  background-color: #fff;\r\n  z-index: 10;\r\n  border-radius: 20px 20px 0 0;\r\n}\r\n\r\n/* 拖动条样式 */\r\n.drag-handle {\r\n  height: 40rpx;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.drag-bar {\r\n  width: 60rpx;\r\n  height: 6rpx;\r\n  background: #ddd;\r\n  border-radius: 3rpx;\r\n}\r\n\r\n/* 搜索框样式 */\r\n.search-box {\r\n  padding: 20rpx;\r\n}\r\n\r\n.search-input {\r\n  background-color: #f5f5f5;\r\n  border-radius: 30rpx;\r\n  padding: 15rpx 30rpx;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.iconfont.icon-search {\r\n  margin-right: 10rpx;\r\n  font-size: 28rpx;\r\n  color: #999;\r\n}\r\n\r\n.search-input input {\r\n  flex: 1;\r\n  height: 40rpx;\r\n  font-size: 28rpx;\r\n  color: #333;\r\n  width: 100%;\r\n}\r\n\r\n/* 分类标签样式 */\r\n.category-tabs {\r\n  white-space: nowrap;\r\n  padding: 0 20rpx 20rpx;\r\n  transition: opacity 0.3s ease;\r\n}\r\n\r\n.tab {\r\n  display: inline-block;\r\n  padding: 10rpx 30rpx;\r\n  margin-right: 20rpx;\r\n  border-radius: 30rpx;\r\n  background-color: #f5f5f5;\r\n  font-size: 28rpx;\r\n}\r\n\r\n.tab.active {\r\n  background-color: #ffcc00;\r\n  color: #fff;\r\n}\r\n\r\n/* 瀑布流样式 */\r\n.waterfall-container {\r\n  flex: 1;\r\n  overflow-y: scroll;\r\n  -webkit-overflow-scrolling: touch;\r\n  transition: opacity 0.3s ease;\r\n  background-color: #f0f0f0;\r\n}\r\n\r\n.waterfall {\r\n  padding: 20rpx;\r\n  padding-bottom: 100rpx;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: #f0f0f0;\r\n}\r\n\r\n.waterfall-column {\r\n  width: 48%;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n/* 卡片样式 */\r\n.card {\r\n  margin-bottom: 20rpx;\r\n  border-radius: 12rpx;\r\n  background-color: #fff;\r\n  overflow: hidden;\r\n  box-shadow: 0 2rpx 10rpx rgba(0,0,0,0.1);\r\n}\r\n\r\n.card-media {\r\n  background-color: #a0c4ff;\r\n  height: var(--card-height, 200rpx);\r\n  width: 100%;\r\n}\r\n\r\n.card-content {\r\n  padding: 16rpx;\r\n}\r\n\r\n.card-title {\r\n  height: 40rpx;\r\n  background-color: #ffadad;\r\n  margin-bottom: 12rpx;\r\n  border-radius: 4rpx;\r\n}\r\n\r\n.card-author {\r\n  height: 30rpx;\r\n  background-color: #caffbf;\r\n  margin-bottom: 12rpx;\r\n  border-radius: 4rpx;\r\n  width: 60%;\r\n}\r\n\r\n.card-footer {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.card-stats {\r\n  height: 30rpx;\r\n  width: 40%;\r\n  background-color: #d3d3d3;\r\n  border-radius: 4rpx;\r\n}\r\n\r\n.card-location {\r\n  height: 30rpx;\r\n  width: 30%;\r\n  background-color: #fdffb6;\r\n  border-radius: 4rpx;\r\n}\r\n\r\n.loading {\r\n  text-align: center;\r\n  padding: 20rpx 0;\r\n  color: #999;\r\n  font-size: 24rpx;\r\n}\r\n</style>","import MiniProgramPage from '/Volumes/是红尘呀/prj/map/map_xy_s_1.0/pages/index/index.vue'\nwx.createPage(MiniProgramPage)"],"names":["LAYOUT_CONFIG","uni"],"mappings":"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"}